<?xml version="1.0" encoding="UTF-8"?>
<!-- | name:名称 | url:种子链接 | skipStatusCode:设置哪些状态码需要忽略，多个用逗号隔开 | userAgent:设置爬虫标识 
	| includeHttps:0|1是否抓取https页 | isDupRemovalStrict:0|1是否严格去掉重复的TargetUrl，即已访问过一次的TargetUrl不会再被访问，若否，就算是重复的TargetUrl，只要它的来源URL不同，都会被访问 
	| isFollowRedirects:0|1是否递归跟随30X返回的location继续抓取 | reqDelay:{n}s|{n}m|{n}h|n每次请求之前延缓时间 
	| enable:0|1是否开启本网站的抓取 | charset:网站字符集 | schedule:调度时间，每隔多长时间重新从种子链接抓取 | 
	thread:分配给本网站爬虫的线程数 | waitQueue:当任务队列空的时候爬虫等待多长时间再索取任务 | timeout:HTTP请求超时 -->
<site name="oschina" includeHttps="true"
	url="http://www.oschina.net/question?catalog=1&amp;show=&amp;p=1"
	reqDelay="1s" enable="false" charset="utf-8" schedule="1h" thread="2">
	<!-- | 配置多个种子链接 | name:种子名称 | url:种子链接 -->
	<seeds>
		<seed name="seed1" url="http://seed1" />
	</seeds>
	<!-- | 告诉爬虫仅抓取以下这些host的链接，多数是应对二级或多级域名的情况 -->
	<!--validHosts> <validHost value="demo.eweb4j.org" /> <validHost value="wwww.eweb4j.org" 
		/> </validHosts -->
	<!-- | HTTP Header <headers> <header name="" value="" /> </headers> -->
	<!-- | HTTP Cookie <cookies> <cookie name="" value="" host="" path="" /> 
		</cookies> -->
	<!-- | 抓取目标 -->
	<rules>
		<rule type="regex"
			value="http://www\.oschina\.net/question\?catalog=1&amp;show=&amp;p=\d+"
			isListPage="true">
			<!-- | 定义如何在来源页面上挖掘新的 URL | 这个节点跟 <model> 节点是一样的结构，只不过名称不叫model而是叫做digUrls而已 -->
			<field name="page_url" isArray="true">
				<parser
					xpath="//div[@class='QuestionList']//ul[@class='pager']//li[@class='page']//a[@href]"
					attribute="href" regex="" />
				<parser
					xpath="//div[@class='QuestionList']//ul[@class='pager']//li[@class='page']//a[@href]"
					attribute="href" regex="" />
			</field>
			<field name="target_url" isArray="true">
				<parser
					xpath="//div[@class='QuestionList']//ul//li[@class='question']//div[@class='qbody']/h2[1]//a[@href]"
					attribute="href" regex="" />
			</field>
		</rule>
		<rule type="regex"
			value="http://www\.oschina\.net/question\?catalog=1&amp;show=&amp;p=\d+"
			isListPage="false">
			<!-- | 目标网页的命名空间配置,一般用于xml页面 | prefix: 前缀 | uri: 关联的URI <namespaces> <namespace 
				prefix="" uri="" /> </namespaces> -->
			<!-- | 属性的配置 | name:属性名称 | isArray:0|1 是否是多值 | isMergeArray:0|1 是否将多值合并，搭配isArray使用 
				| isParam:0|1 是否作为参数提供给别的field节点使用，如果是，则生命周期不会保持到最后 | isFinal:0|1 是否是不可变的参数，搭配isParam使用，如果是，第一次赋值之后不会再被改变 
				| isAlsoParseInNextPage:0|1 是否在分页的下一页里继续解析，用于目标网页有分页的情况 | isTrim:0|1 是否去掉前后空格 -->
			<field name="title" isArray="false">
				<!-- | xpath: XPath规则，如果目标页面是XML，则可以使用2.0语法，否则HTML的话暂时只能1.0 | attribute:当使用XPath解析后的内容不是文本而是一个Node节点对象的时候，可以给定一个属性名获取其属性值例如<img 
					src="" /> | regex:当使用XPath（包括attribute）规则获取到的文本内容不满足需求时，可以继续设置regex正则表达式进行解析 
					| exp:当使用XPath获取的文本(如果获取的不是文本则会先执行exp而不是regex否则先执行regex)不满足需求时，可以继续这是exp表达式进行解析 
					| exp表达式有几个内置对象和方法: | $output(Node): 这个是内置的output函数，作用是输出某个XML节点的结构内容。参数是一个XML节点对象，可以通过XPath获得 
					| $this: 当使用XPath获取到的是Node节点时，这个表示节点对象，否则表示Java的字符串对象,可以调用Java字符串API进行处理 
					| $Tags: 这个是内置的用于过滤标签的工具类 | $Tags.xml($output($this)).rm('p').ok() | $Tags.xml($this).rm('p').empty().ok() 
					| $Attrs: 这个是内置的用于过滤属性的工具类 | $Attrs.xml($this).rm('style').ok() | $Attrs.xml($this).tag('img').rm('src').ok() 
					| | $Tags和$Attrs可以一起使用: | $Tags.xml($this).rm('p').Attrs().rm('style').ok() 
					| $Attrs.xml($this).rm('style').Tags().rm('p').ok() | skipErr:0|1 是否忽略错误消息 
					| skipRgxFail:0|1 是否忽略正则匹配失败，如果是，则会取失败前的值 -->
				<parser xpath="//div[@class='QTitle']/h1/text()" attribute="href"
					regex="" />
			</field>
			<field name="content" isArray="false">
				<parser xpath="//div[@class='Content']//div[@class='detail']"
					attribute="href" regex="" />
				<!--attribute 黑名单 -->
				<parser attribute="href" regex=""
					xpath="$Attrs.xml($this).rm('class').rm('style').rm('width').rm('height').rm('usemap').rm('align').rm('border').rm('title').rm('alt').ok()" />
				<!--tag 黑名单，去掉内嵌内容 -->
				<parser attribute="href" regex=""
					xpath="$Tags.xml($this).rm('map').rm('iframe').rm('object').empty().ok()" />
				<!--tag 白名单，保留的标签，除此之外都要删除（不删除其他标签内嵌内容） -->
				<parser attribute="href" regex=""
					xpath="$Tags.xml($this).kp('br').kp('h1').kp('h2').kp('h3').kp('h4').kp('h5').kp('h6').kp('table').kp('th').kp('tr').kp('td').kp('img').kp('p').kp('a').kp('ul').kp('ol').kp('li').kp('td').kp('em').kp('i').kp('u').kp('er').kp('b').kp('strong').ok()" />
				<!--其他 -->
			</field>
			<field name="author" isArray="false">
				<parser xpath="//div[@class='stat']//a[@target='_blank']/text()"
					attribute="href" regex="1" />
			</field>
			<field name="tags" isArray="false">
				<parser xpath="//div[@class='Tags']//a/text()" attribute="href"
					regex="1" />
			</field>
			<field name="answers" isArray="false">
				<parser xpath="//li[@class='Answer']//div[@class='detail']/text()"
					attribute="href" regex="1" />
			</field>
		</rule>
	</rules>
</site>
